services:
  db:
    image: postgres:17-alpine
    restart: always
    env_file:
      - .env.prod # or .env.prod for production
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env.prod # or .env.prod for production
    environment:
      - DJANGO_SETTINGS_MODULE=Django_TechYatra.settings.prod
    command: bash -c "python manage.py migrate_schemas --shared && gunicorn Django_TechYatra.wsgi:application --bind 0.0.0.0:8000"

  nginx:
    build:
      context: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:8000"
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
